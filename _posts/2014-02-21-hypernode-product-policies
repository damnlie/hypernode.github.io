---
layout: post
title:  "Hypernode Product Policy"
date:   2014-02-21 17:10:03
categories: hypernode policy
excerpt: "What is the policy on flexibility and standardization in Hypernode?"
---
## Flexibility vs standardization in configuration and settings

In theory, dedicated hosts offer limitless flexibility on the part of the customer. In practise, Byte will try to strike a balance between flexibility and standardization on the Hypernode platform. While we want to offer you the flexibility you need, we also want to provide the security a standardized platform brings. We aim at getting 95% of the features perfect for 95% of the Magento shops out there.

There are several advantages to having a high degree of standardization in the stack configuration:
* Whenever there are stack updates because of maintenance or security, Byte tests several reference applications. Because there are only so many features to maintain and because client applications are expected to conform to certain standards, the tests make it safe to say that all Hypernode shops will work with the new stack.
* Because of the insight our tests give us, we have the confidence to enhance the stack early and often.
* To keep our confidence in the platform high, we want to limit the number of different stacks. Probably approx 2 (production and testing) and a couple of experimental stacks.
* Byte can perform emergency (security) maintenance instantaneous and 99,5% of shops will work properly.
* Easy or automatic scaling to bigger or multiple nodes is only possible with a very high degree of standardization.

When we roll out a new feature, however, we wont know exactly where the perfect balance between standards and flexibility lies. Where does leaving you to tweak at will impede our ability to upgrade your shop to a safe and secure platform without incident? Where do we need to restrict your endless creativity for the sake of stability?

Well, initially we will offer a lot of flexibility on your part. This allows us to find out what features are needed and used. Then we will gradually or (not that gradually) bring standardization to the feature once we learn about your use.

The process will look something like:
# A new feature is developed or part of the stack is up for revamp.
# If possible, we'll try to find the proper amount of standardisation vs flexibility immediately. We'll provide a best practise and possibly some flexibility for configuration.
# If not, developers will be able to tweak a lot of the configuration and settings. 
# After a certain period, we will distill a best practise and implement this for all customers.
# Later we will add flexibility to certain configurations/settings of the stack/tools, based on the combined wishes of the developers, while maintaining the power of standardization.
